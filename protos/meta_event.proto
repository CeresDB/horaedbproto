syntax = "proto3";

package meta_event;
option go_package = "github.com/CeresDB/ceresdbproto/pkg/metaeventpb";

import "common.proto";
import "meta_service.proto";

// The service is hosted by CeresDB to handle the events from CeresMeta.
service MetaEventService {
  rpc OpenShards(OpenShardsRequest) returns (OpenShardsResponse) {}
  rpc CloseShards(CloseShardsRequest) returns (CloseShardsResponse) {}
  rpc SplitShard(SplitShardRequest) returns (SplitShardResponse) {}
  rpc MergeShards(MergeShardsRequest) returns (MergeShardsResponse) {}
  rpc ChangeShardRole(ChangeShardRoleRequest)
      returns (ChangeShardRoleResponse) {}
}

message OpenShardsRequest {
  repeated meta_service.ShardTables shard_tables = 1;
}

message OpenShardsResponse {
  common.ResponseHeader header = 1;
}

message CloseShardsRequest {
  repeated uint32 shard_ids = 1;
}

message CloseShardsResponse {
  common.ResponseHeader header = 1;
}

message SplitShardRequest {}

message SplitShardResponse {
  common.ResponseHeader header = 1;
}

message MergeShardsRequest {}

message MergeShardsResponse {
  common.ResponseHeader header = 1;
}

message ChangeShardRoleRequest {}

message ChangeShardRoleResponse {
  common.ResponseHeader header = 1;
}

message CreateTableAction {
  string catalog_name = 1;
  // reserve for catalog_id
  string schema_name = 3;
  uint32 schema_id = 4;
  string table_name = 5;
  uint64 table_id = 6;
  uint32 shard_id = 7;
}

message CreateTableResponse {
  common.ResponseHeader header = 1;
}

message DropTableAction {
  string catalog_name = 1;
  string schema_name = 2;
  string table_name = 3;
}

message DropTableResponse {
  common.ResponseHeader header = 1;
}