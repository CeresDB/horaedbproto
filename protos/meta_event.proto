syntax = "proto3";

package meta_event;
option go_package = "github.com/CeresDB/ceresdbproto/pkg/metaeventpb";

import "cluster.proto";
import "common.proto";
import "meta_service.proto";

// The service is hosted by CeresDB to handle the events from CeresMeta.
service MetaEventService {
  rpc OpenShards(OpenShardsRequest) returns (OpenShardsResponse) {}
  rpc CloseShards(CloseShardsRequest) returns (CloseShardsResponse) {}
  rpc CreateTableOnShard(CreateTableOnShardRequest)
      returns (CreateTableOnShardResponse) {}
  rpc DropTableOnShard(DropTableOnShardRequest)
      returns (DropTableOnShardResponse) {}
  rpc SplitShard(SplitShardRequest) returns (SplitShardResponse) {}
  rpc MergeShards(MergeShardsRequest) returns (MergeShardsResponse) {}
  rpc ChangeShardRole(ChangeShardRoleRequest)
      returns (ChangeShardRoleResponse) {}
}

message UpdateShardInfo {
  meta_service.ShardInfo curr_shard_info = 1;
  uint64 prev_version = 2;
}

message OpenShardsRequest {
  repeated meta_service.ShardInfo shards = 1;
}

message OpenShardsResponse {
  common.ResponseHeader header = 1;
}

message CloseShardsRequest {
  repeated uint32 shard_ids = 1;
}

message CloseShardsResponse {
  common.ResponseHeader header = 1;
}

message CreateTableOnShardRequest {
  UpdateShardInfo update_shard_info = 1;
  meta_service.TableInfo table_info = 2;
  string create_sql = 3;
}

message CreateTableOnShardResponse {
  common.ResponseHeader header = 1;
}

message DropTableOnShardRequest {
  UpdateShardInfo update_shard_info = 1;
  meta_service.TableInfo table_info = 2;
}

message DropTableOnShardResponse {
  common.ResponseHeader header = 1;
}

message SplitShardRequest {}

message SplitShardResponse {
  common.ResponseHeader header = 1;
}

message MergeShardsRequest {}

message MergeShardsResponse {
  common.ResponseHeader header = 1;
}

message ChangeShardRoleRequest {}

message ChangeShardRoleResponse {
  common.ResponseHeader header = 1;
}
